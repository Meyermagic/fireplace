initSidebarItems({"enum":[["AnyMode","Enumeration of all possible `Mode`s, makes storing any mode much easier"],["AnyModeConfig","Configuration for `AnyMode`"],["CombinedPredicate","A `Predicate` may filter given `Views`"]],"mod":[["bsp","i3-like **B**inary **S**plit  **P**artitioning `Mode` and corresponding handlers and types"]],"struct":[["Combined","A `Mode` that splits `View` by given filter rules onto two given `Mode`s"],["CombinedConfig","Configuration for `Combined`"],["CombinedKeyPatterns","`KeyPattern`s toggling modes"],["Floating","A `Mode` that does traditional `View` management."],["FloatingConfig","Configuration for `Floating`"],["Fullscreen","A `Mode` that lets you pull one `View` into fullscreen operation while letting another wrapped `Mode` handle the rest"],["FullscreenConfig","Configuration of `Fullscreen`"],["FullscreenKeyPatterns","`KeyPattern`s toggling fullscreen"],["Switch","A `Mode` that lets you conviniently switch between different `Mode`s"],["SwitchConfig","Configuration for `Switch`"],["SwitchKeyPatterns","`KeyPattern`s switching modes"]],"trait":[["Mode","Common interface for `Mode`s mostly used by workspaces"]],"type":[["AnyModeWrap","Convinient type alias for a wrapped `AnyMode`"],["CombinedWrap","Convinient type alias for a wrapped `Combined`"],["FullscreenWrap","Convinient type alias for a wrapped `Fullscreen`"],["SwitchWrap","Convinient type alias for a wrapped `Switch`"]]});