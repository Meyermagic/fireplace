initSidebarItems({"enum":[["BackendType","Backend used by wlc"],["Button",""],["ButtonState","States of a button"],["Error","Error representing the failure to start the Compositor"],["Key",""],["KeyState","States of a key"],["TouchType","Touch events"]],"fn":[["get_backend_type","Gets the currently active Backend"],["init","Initialize Wlc. Returns `wlc::Error` on failure."],["terminate","Terminates the currently active wlc Compositor"]],"mod":[["Anchor","View Positioner Anchor"],["ConstraintAdjustment","View Positioner Adjustments when View is constraint"],["Gravity","View Positioner Gravity"],["Led","Keyboard LEDs"],["Modifier","Set of modifiers on a keyboard"],["ResizeEdge","Edges for interactive resizing"],["ScrollAxis","Scroll Axes"],["ViewPropertyUpdate","Updated properties of a view"],["ViewState","States a View may hold"],["ViewType","Typical view categories"],["Visibility","Visibility Flags Useful to implement workspace functionality or simply hiding views"],["event_loop","Exposed functionality of wlc's underlying run loop"],["input","Experimental Input API"],["render","wlc's Rendering extensions"]],"struct":[["Geometry",""],["Modifiers","Combined keyboard Modifiers and LEDs"],["Output","An Output managed by Wlc"],["Point",""],["Positioner","A Positioner of a `View` managed by Wlc"],["Size",""],["View","A View managed by Wlc"],["WeakOutput","Weak reference to an output"],["WeakView","Weak reference to a view"],["Wlc","Initialized compositor"]],"trait":[["Callback","Entry point for your code"],["Handle","Assiciated user-provided data"]]});