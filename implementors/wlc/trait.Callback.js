(function() {var implementors = {};
implementors["fireplace_lib"] = ["impl&lt;T:&nbsp;<a class='trait' href='fireplace_lib/callback/trait.AsWrapper.html' title='trait fireplace_lib::callback::AsWrapper'>AsWrapper</a>&gt; <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Wrapper.html' title='struct fireplace_lib::callback::Wrapper'>Wrapper</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='fireplace_lib/callback/trait.AsSplit.html' title='trait fireplace_lib::callback::AsSplit'>AsSplit</a>&gt; <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Split.html' title='struct fireplace_lib::callback::Split'>Split</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='fireplace_lib/callback/trait.AsVecCallback.html' title='trait fireplace_lib::callback::AsVecCallback'>AsVecCallback</a>&gt; <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.VecCallback.html' title='struct fireplace_lib::callback::VecCallback'>VecCallback</a>&lt;T&gt;","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/struct.StoreHandler.html' title='struct fireplace_lib::handlers::StoreHandler'>StoreHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/struct.FocusHandler.html' title='struct fireplace_lib::handlers::FocusHandler'>FocusHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/keyboard/struct.KeyboardHandler.html' title='struct fireplace_lib::handlers::keyboard::KeyboardHandler'>KeyboardHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/struct.PointerHandler.html' title='struct fireplace_lib::handlers::PointerHandler'>PointerHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/workspaces/modes/bsp/struct.IndicatorsHandler.html' title='struct fireplace_lib::handlers::workspaces::modes::bsp::IndicatorsHandler'>IndicatorsHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Wrapper.html' title='struct fireplace_lib::callback::Wrapper'>Wrapper</a>&lt;<a class='struct' href='fireplace_lib/handlers/workspaces/modes/bsp/struct.BSP.html' title='struct fireplace_lib::handlers::workspaces::modes::bsp::BSP'>BSP</a>&gt;","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Split.html' title='struct fireplace_lib::callback::Split'>Split</a>&lt;<a class='struct' href='fireplace_lib/handlers/workspaces/modes/struct.Combined.html' title='struct fireplace_lib::handlers::workspaces::modes::Combined'>Combined</a>&gt;","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/workspaces/modes/struct.Floating.html' title='struct fireplace_lib::handlers::workspaces::modes::Floating'>Floating</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Wrapper.html' title='struct fireplace_lib::callback::Wrapper'>Wrapper</a>&lt;<a class='struct' href='fireplace_lib/handlers/workspaces/modes/struct.Switch.html' title='struct fireplace_lib::handlers::workspaces::modes::Switch'>Switch</a>&gt;","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Wrapper.html' title='struct fireplace_lib::callback::Wrapper'>Wrapper</a>&lt;<a class='struct' href='fireplace_lib/handlers/workspaces/modes/struct.Fullscreen.html' title='struct fireplace_lib::handlers::workspaces::modes::Fullscreen'>Fullscreen</a>&gt;","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Wrapper.html' title='struct fireplace_lib::callback::Wrapper'>Wrapper</a>&lt;Workspace&gt;","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/workspaces/struct.WorkspaceHandler.html' title='struct fireplace_lib::handlers::workspaces::WorkspaceHandler'>WorkspaceHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/geometry/struct.GapsHandler.html' title='struct fireplace_lib::handlers::geometry::GapsHandler'>GapsHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/geometry/struct.GeometryHandler.html' title='struct fireplace_lib::handlers::geometry::GeometryHandler'>GeometryHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/struct.OutputConfigHandler.html' title='struct fireplace_lib::handlers::OutputConfigHandler'>OutputConfigHandler</a>","impl&lt;C:&nbsp;<a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> + 'static&gt; <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Wrapper.html' title='struct fireplace_lib::callback::Wrapper'>Wrapper</a>&lt;<a class='struct' href='fireplace_lib/handlers/render/struct.GLInit.html' title='struct fireplace_lib::handlers::render::GLInit'>GLInit</a>&lt;C&gt;&gt;","impl&lt;C:&nbsp;<a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> + 'static&gt; <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/callback/struct.Wrapper.html' title='struct fireplace_lib::callback::Wrapper'>Wrapper</a>&lt;<a class='struct' href='fireplace_lib/handlers/render/struct.GraphicsRenderer.html' title='struct fireplace_lib::handlers::render::GraphicsRenderer'>GraphicsRenderer</a>&lt;C&gt;&gt;","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/render/conrod/struct.ConrodRenderer.html' title='struct fireplace_lib::handlers::render::conrod::ConrodRenderer'>ConrodRenderer</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/render/conrod/provider/background/struct.BackgroundHandler.html' title='struct fireplace_lib::handlers::render::conrod::provider::background::BackgroundHandler'>BackgroundHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/render/conrod/provider/statusbar/struct.StatusbarHandler.html' title='struct fireplace_lib::handlers::render::conrod::provider::statusbar::StatusbarHandler'>StatusbarHandler</a>","impl <a class='trait' href='wlc/trait.Callback.html' title='trait wlc::Callback'>Callback</a> for <a class='struct' href='fireplace_lib/handlers/render/conrod/struct.ConrodHandler.html' title='struct fireplace_lib::handlers::render::conrod::ConrodHandler'>ConrodHandler</a>",];
implementors["wlc"] = [];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
